/**
 * THIS FILE IS AUTOMATICALLY GENERATED FROM: https://testapi.artlighthouse.ge/api/schema
 * DO NOT EDIT MANUALLY
 */

export interface AddToCartRequest {
  product_id: number;
  quantity: number;
}

export interface AddToFavoritesRequest {
  product_id: number;
}

export interface Address {
  id: number;
  address_type?: AddressTypeEnum;
  address_string: string;
  extra_details?: string;
  latitude?: string;
  longitude?: string;
  is_default?: boolean;
  created_at: string;
  updated_at: string;
}

export interface AddressRequest {
  address_type?: AddressTypeEnum;
  address_string: string;
  extra_details?: string;
  latitude?: string;
  longitude?: string;
  is_default?: boolean;
}

export interface AddressTypeEnum {
  [key: string]: any;
}

export interface AdminAttribute {
  id: number;
  name: string;
  attribute_type: AttributeTypeEnum;
  is_required?: boolean;
  is_filterable?: boolean;
  parent?: number;
  categories?: number[];
  sub_attributes_count: string;
  categories_count: string;
  values: AdminAttributeValue[];
  created_at: string;
  translations?: AttributeTranslation[];
}

export interface AdminAttributeRequest {
  name: string;
  attribute_type: AttributeTypeEnum;
  is_required?: boolean;
  is_filterable?: boolean;
  parent?: number;
  categories?: number[];
  translations?: AttributeTranslationRequest[];
}

export interface AdminAttributeValue {
  id: number;
  value: string;
  color_code?: string;
  sort_order?: number;
  translations?: AttributeValueTranslation[];
}

export interface AdminAttributeValueRequest {
  value: string;
  color_code?: string;
  sort_order?: number;
  translations?: AttributeValueTranslationRequest[];
}

export interface AdminCategory {
  id: number;
  name: string;
  description?: string;
  slug: string;
  parent?: number;
  full_path: string;
  subcategories_count: string;
  is_active?: boolean;
  created_at: string;
  translations?: CategoryTranslation[];
}

export interface AdminCategoryRequest {
  name: string;
  description?: string;
  slug: string;
  parent?: number;
  is_active?: boolean;
  translations?: CategoryTranslationRequest[];
}

export interface Attribute {
  id: number;
  name: string;
  attribute_type: AttributeTypeEnum;
  is_required?: boolean;
  is_filterable?: boolean;
  parent?: number;
  categories?: number[];
  values: AttributeValue[];
  sub_attributes: string;
  created_at: string;
}

export interface AttributeTranslation {
  language_code: LanguageCodeEnum;
  name: string;
}

export interface AttributeTranslationRequest {
  language_code: LanguageCodeEnum;
  name: string;
}

export interface AttributeTypeEnum {
  [key: string]: any;
}

export interface AttributeValue {
  id: number;
  value: string;
  color_code?: string;
  sort_order?: number;
}

export interface AttributeValueTranslation {
  language_code: LanguageCodeEnum;
  value: string;
}

export interface AttributeValueTranslationRequest {
  language_code: LanguageCodeEnum;
  value: string;
}

export interface Cart {
  id: number;
  items: CartItem[];
  total_items: string;
  total_price: string;
  created_at: string;
  updated_at: string;
}

export interface CartItem {
  id: number;
  product: number;
  product_details: ProductList;
  quantity?: number;
  total_price: string;
  added_at: string;
}

export interface Category {
  id: number;
  name: string;
  description: string;
  slug: string;
  parent?: number;
  full_path: string;
  subcategories: string;
  is_active?: boolean;
  created_at: string;
}

export interface CategoryTranslation {
  language_code: LanguageCodeEnum;
  name: string;
  description?: string;
}

export interface CategoryTranslationRequest {
  language_code: LanguageCodeEnum;
  name: string;
  description?: string;
}

export interface DeliveryMethodEnum {
  [key: string]: any;
}

export interface EmailVerificationRequest {
  email: string;
  code: string;
}

export interface Favorite {
  id: number;
  product: number;
  product_details: ProductList;
  created_at: string;
}

export interface LanguageCodeEnum {
  [key: string]: any;
}

export interface Order {
  id: string;
  order_number: string;
  user: number;
  status?: StatusEnum;
  status_display: string;
  payment_status?: PaymentStatusEnum;
  payment_status_display: string;
  delivery_address?: number;
  delivery_address_data: Address;
  phone_number: string;
  delivery_method?: DeliveryMethodEnum;
  delivery_method_display: string;
  delivery_notes?: string;
  subtotal: string;
  delivery_fee?: string;
  tax_amount?: string;
  discount_amount?: string;
  total_amount: string;
  payment_method?: string;
  payment_transaction_id?: string;
  created_at: string;
  updated_at: string;
  confirmed_at: string;
  shipped_at: string;
  delivered_at: string;
  items: OrderItem[];
  total_items: string;
}

export interface OrderCreate {
  delivery_address?: number;
  phone_number: string;
  delivery_method?: DeliveryMethodEnum;
  delivery_notes?: string;
  payment_method?: string;
}

export interface OrderCreateItem {
  product: number;
  quantity: number;
}

export interface OrderCreateItemRequest {
  product: number;
  quantity: number;
}

export interface OrderCreateRequest {
  delivery_address?: number;
  phone_number: string;
  delivery_method?: DeliveryMethodEnum;
  delivery_notes?: string;
  payment_method?: string;
  items: OrderCreateItemRequest[];
  from_cart?: boolean;
}

export interface OrderItem {
  id: number;
  product: number;
  product_data: ProductList;
  quantity: number;
  unit_price: string;
  total_price: string;
  product_title: string;
  product_sku: string;
  product_image_url: string;
  created_at: string;
}

export interface PasswordChangeRequest {
  current_password: string;
  new_password: string;
  new_password_confirm: string;
}

export interface PasswordResetConfirmRequest {
  email: string;
  code: string;
  new_password: string;
  new_password_confirm: string;
}

export interface PasswordResetRequestRequest {
  email: string;
}

export interface PatchedAddressUpdateRequest {
  address_string?: string;
  extra_details?: string;
  latitude?: string;
  longitude?: string;
  is_default?: boolean;
}

export interface PatchedAdminAttributeRequest {
  name?: string;
  attribute_type?: AttributeTypeEnum;
  is_required?: boolean;
  is_filterable?: boolean;
  parent?: number;
  categories?: number[];
  translations?: AttributeTranslationRequest[];
}

export interface PatchedAdminAttributeValueRequest {
  value?: string;
  color_code?: string;
  sort_order?: number;
  translations?: AttributeValueTranslationRequest[];
}

export interface PatchedAdminCategoryRequest {
  name?: string;
  description?: string;
  slug?: string;
  parent?: number;
  is_active?: boolean;
  translations?: CategoryTranslationRequest[];
}

export interface PatchedCartItemRequest {
  quantity?: number;
}

export interface PatchedProductCreateUpdateRequest {
  title?: string;
  description?: string;
  slug?: string;
  price?: string;
  compare_price?: string;
  cost_price?: string;
  sku?: string;
  barcode?: string;
  stock_quantity?: number;
  track_inventory?: boolean;
  allow_backorder?: boolean;
  meta_title?: string;
  meta_description?: string;
  category?: number;
  tags?: string;
  is_active?: boolean;
  is_featured?: boolean;
  attributes?: ProductAttributeRequest[];
}

export interface PatchedUserUpdateRequest {
  first_name?: string;
  last_name?: string;
  phone_number?: string;
  date_of_birth?: string;
}

export interface PaymentStatusEnum {
  [key: string]: any;
}

export interface ProductAttributeRequest {
  attribute: number;
  value: string;
  attribute_value?: number;
}

export interface ProductCreateUpdateRequest {
  title: string;
  description: string;
  slug: string;
  price: string;
  compare_price?: string;
  cost_price?: string;
  sku?: string;
  barcode?: string;
  stock_quantity?: number;
  track_inventory?: boolean;
  allow_backorder?: boolean;
  meta_title?: string;
  meta_description?: string;
  category?: number;
  tags?: string;
  is_active?: boolean;
  is_featured?: boolean;
  attributes?: ProductAttributeRequest[];
}

export interface ProductDetail {
  id: number;
  title: string;
  description: string;
  slug: string;
  price: string;
  compare_price?: string;
  cost_price?: string;
  sku?: string;
  barcode?: string;
  stock_quantity?: number;
  track_inventory?: boolean;
  allow_backorder?: boolean;
  meta_title: string;
  meta_description: string;
  category?: number;
  category_details: string;
  tags: string;
  tags_list: string;
  is_active?: boolean;
  is_featured?: boolean;
  average_rating: string;
  review_count: number;
  discount_percentage: string;
  is_in_stock: string;
  images: string;
  product_attributes: string;
  is_favorite: string;
  created_at: string;
  updated_at: string;
}

export interface ProductImage {
  id: number;
  image: string;
  alt_text: string;
  is_primary?: boolean;
  sort_order?: number;
}

export interface ProductImageUploadRequest {
  image: string;
  alt_text?: string;
  is_primary?: boolean;
  sort_order?: number;
}

export interface ProductList {
  id: number;
  title: string;
  slug: string;
  price: string;
  compare_price?: string;
  discount_percentage: string;
  primary_image: string;
  category_name: string;
  is_active?: boolean;
  is_featured?: boolean;
  average_rating?: string;
  review_count?: number;
  is_in_stock: string;
  stock_quantity?: number;
  is_favorite: string;
}

export interface ProductListRequest {
  slug: string;
  price: string;
  compare_price?: string;
  is_active?: boolean;
  is_featured?: boolean;
  average_rating?: string;
  review_count?: number;
  stock_quantity?: number;
}

export interface ResendVerificationCodeRequest {
  email: string;
}

export interface StatusEnum {
  [key: string]: any;
}

export interface User {
  id: number;
  email: string;
  first_name: string;
  last_name: string;
  phone_number?: string;
  date_of_birth?: string;
  date_joined: string;
  is_admin: string;
}

export interface UserLoginRequest {
  email: string;
  password: string;
}

export interface UserRegistrationRequest {
  email: string;
  first_name: string;
  last_name: string;
  phone_number?: string;
  date_of_birth?: string;
  password: string;
  password_confirm: string;
}
